&ACCESS RVO1
&COMMENT
def server_motion()
   
   initialize()

   loop
      ;if n_command <> n_command_executed then
         SWITCH (instruction_code)
         CASE 1
            LIN cartesian_target
         
         DEFAULT
            LIN cartesian_target
         ENDSWITCH
      
      ;n_command_executed = n_command_executed + 1

      ;if n_command_executed > max_command_packet then
      ;n_command_executed = 1

      ;endif
      wait 0.01

   endloop


end


def initialize()
   ;FOLD INI
   ;FOLD BASISTECH INI
   GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
   INTERRUPT ON 3 
   BAS (#INITMOV,0 )
   ;ENDFOLD (BASISTECH INI)
   ;FOLD USER INI
   ;Make your modifications here
         
   ;ENDFOLD (USER INI)
   ;ENDFOLD (INI)
   
   $TOOL=TOOL_DATA[1] ; "LASER"
   ;$TOOL={X -5.25,Y -259.33,Z 286.75,A 0.0,B 0.0,C 0.0}
   $BASE={X 1250.29, Y -1480.35, Z 1247.41, A 90, B 0, C 0}  ; user-defined BASE frame
   ;$BASE=BASE_DATA[3] ; user-defined BASE frame
   ;$BASE=BASE_DATA[1] ; "LK_BASE (TurnTable)"
   ;$BASE={X 1622.85,Y -1582.69,Z 15.62,A 0.14,B 0.07,C 0.25}
   
   $VEL.CP = 0.03 ; linear speed m/s
   $VEL.ORI1 = 300 ; swivel speed deg/s
   $VEL.ORI2 = 300 ; rotation speed deg/s
   
   $APO.CDIS = 0.3 ;mm; in ABB: zonddata = z0, meaning the tolerate zone during motion commands

   PTP $POS_ACT ; $POS_ACT is a system variable of structure type E6POS and contains the current Cartesian robot position(XYZABC).

end 