<launch>
  <arg name="gui" default="true" />
  <arg name="sim" default="false" />

  <node name="Imviewer" pkg="calib_ros_run" type="runviewer.py">
    <param name="image" type="str" value="/usb_cam/image_rect" />
    <param name="config_file" type="str" value="profile3d.yaml" />
  </node>
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video1" />
    <param name="image_width" value="1280" />
    <param name="image_height" value="720" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node> 

  <node name="image_proc" pkg="image_proc" type="image_proc" ns="usb_cam"/>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find monitoring)/config/workcell.rviz" required="true" if="$(arg gui)" />
  
  <arg name="model" value="$(find monitoring)/urdf/workcell.xacro" />
  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />

  <include file="$(find abb_driver)/launch/robot_interface.launch" unless="$(arg sim)">
    <arg name="robot_ip" value="192.168.125.1" />
    <arg name="J23_coupled" value="true" />
  </include>

  <rosparam command="load" file="$(find abb_irb4400_support)/config/joint_names_irb4400l_30_243.yaml" />

  <!-- use the robot state publisher to publish the /tf topic -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />


  <!-- <include file="$(find usb_cam)/launch/usb_cam-test.launch"> -->
  <!-- <arg name="video_device" value="/dev/video1" />
    <arg name="image_width" value="640" />
    <arg name="image_height" value="480" />
    <arg name="pixel_format" value="yuyv" />
    <arg name="camera_frame_id" value="usb_cam" />
    <arg name="io_method" value="mmap"/> 
  </include> -->
</launch>
